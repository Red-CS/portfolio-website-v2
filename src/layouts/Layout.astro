---
// Icon component
import { Icon } from '@components'

// Icons
import { FiGithub, FiInstagram, FiLinkedin } from 'react-icons/fi'
import { FaDiscord } from 'react-icons/fa'
import { LiaSpotify } from 'react-icons/lia'
import { FaXTwitter } from 'react-icons/fa6'

// Types
import type { IconProps } from '@types'

const socials: IconProps[] = [
  {
    icon: FiGithub,
    href: 'https://github.com/Red-CS/'
  },
  {
    icon: LiaSpotify,
    href: 'https://open.spotify.com/user/jpw918?si=9641a1c3c57b4e04',
    style: {
      transform: 'scale(1.4)' // Spotify logo is weird for whatever reason
    }
  },
  {
    icon: FiInstagram,
    href: ''
  },
  {
    icon: FiLinkedin,
    href: ''
  },
  {
    icon: FaXTwitter,
    href: ''
  },
  {
    icon: FaDiscord,
    href: ''
  }
]

const email = 'redpwilliams@gmail.com'

const navHeaders: { name: string; href: string }[] = [
  { name: 'Home', href: '/' },
  { name: 'Projects', href: '/projects' },
  { name: 'Reports', href: '/reports' },
  { name: 'Resume', href: '/resume' }
]

const isSubpath = (currentUrl: string, basePath: string): boolean => {
  if (currentUrl === basePath) return true
  if (basePath === '/') return false
  return currentUrl.startsWith(basePath)
}

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;600;700&display=swap'
      rel='stylesheet'
    />
    <link
      rel='stylesheet'
      href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
    />
  </head>
  <body>
    <nav class='main-nav'>
      <ul>
        {
          navHeaders.map((header) => (
            <li>
              <a
                href={header.href}
                style={{
                  color: isSubpath(Astro.url.pathname, header.href) ? 'var(--text-main)' : ''
                }}>
                {header.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div class='main-container'>
      <slot />
      <aside class='email'><div><a>{email}</a></div></aside>
    </div>
    <aside class='socials'>
      <ul>
        {
          socials.map((social) => (
            <li style='scale: 1.3'>
              <Icon href={social.href} translateOnHover>
                <social.icon className='icon' style={social.style} />
              </Icon>
            </li>
          ))
        }
      </ul>
    </aside>
    <footer></footer>
  </body>
</html>
<style is:global lang='scss'>
  @use 'src/main' as *;

  :root {
    --text-main: #f4f3f2;
    --text-gray-light: #d3d3d3;
    --text-gray-dark: #a3a3a3;

    --bg-color: #1e1e1e;

    --gradient-start: rgba(255, 133, 64, 1);
    --gradient-end: rgba(255, 64, 64, 1);
    --gradient: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));

    --aside-width: 6vw;

    --font-sans: Inter, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    --font-mono: 'Roboto Mono', 'Courier New', Courier, monospace;
  }
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    height: 100%;
    scroll-behavior: smooth;
  }

  body {
    background-color: var(--bg-color);
    background-size: cover;
    margin: 0;
    padding: 0;
    font-family: var(--font-sans);
    // min-height: 100vh;
    height: 100%;
  }

  aside,
  aside > * {
    display: none;
    color: var(--text-gray-light);
    font-family: var(--font-mono);
  }

  main {
    padding: 0 1em;
  }

  a,
  a:visited {
    color: var(--text-main);
  }

  .main-nav {
    position: sticky;
    top: 1rem;
    width: 90%;
    max-width: 28rem;
    height: 3rem;
    grid-column: 2;
    justify-self: center;
    margin: 1rem auto;
    border: 2px solid var(--text-gray-dark);
    background-color: #171717;
    border-radius: 8px;
    background-clip: border-box;
    transition: border-color 0.2s ease;
    z-index: 2;

    &:hover {
      border-color: var(--text-gray-light);
    }

    ul {
      display: flex;
      align-items: center;
      justify-content: space-around;
      height: 100%;

      a {
        color: var(--text-gray-dark);
        padding: 0.8em;
        transition: color 0.2s ease;
        font-weight: 400;

        &:hover {
          color: var(--text-main);
        }
      }
    }
  }

  @media (min-width: 30em) {
    main {
      padding: 0 2em;
    }
  }

  @media (min-width: $breakpoint-main) {
    // .general-container {
    //   display: grid;
    //   grid-template-columns: var(--aside-width) 1fr var(--aside-width);
    //   grid-template-rows: min-content;
    //   position: relative;
    // }

    main {
      grid-column: 2;
      padding: 0 3rem;
    }

    aside {
      position: fixed;
      height: 100%;
      width: var(--aside-width);
      display: block;
      overflow-y: auto;
    }

    %aside-positioned-element {
      display: inline-block;
      position: relative;
    }

    %aside-positioned-element-before {
      content: '';
      display: inline-block;
      width: 0.12rem;
      height: 125px;
      background-color: var(--text-gray-light);
      vertical-align: middle;
      margin-bottom: 20px;
    }

    .email {
      left: 0;
      right: auto;
      position: sticky;
      bottom: 0;

      & > div {
        display: block;
        //   flex-direction: column;
        //   justify-content: center;
        //   align-items: center;
        //   flex-wrap: nowrap;
        //   position: absolute;
        //   bottom: 0;
        //   left: 0;
        //   right: 0;
        //   font-size: 0.9rem;
      }

      & > div > a {
        writing-mode: vertical-rl;
        transform: rotate(180deg);
        @extend %aside-positioned-element;
      }

      & > div > a::before {
        @extend %aside-positioned-element-before;
      }
    }

    .socials {
      right: 0;
      left: auto;
      & > ul {
        display: flex;
        flex-direction: column;
        justify-content: start;
        align-items: center;
        flex-wrap: nowrap;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        gap: 16px;
      }

      & > ul::before {
        @extend %aside-positioned-element-before;
      }
    }

    .socials a,
    .socials a:visited {
      color: var(--text-gray-light);
    }

    footer {
      height: 30vh;
      grid-column: 1 / -1;
      border: 3px solid blue;
      bottom: 0;
      background-color: paleturquoise;
    }
  }

  h2 {
    color: var(--text-main);
    font-size: 1rem;
  }

  h3 {
    color: var(--text-main);
    font-size: 2rem;
    font-weight: 500;
  }

  p {
    color: var(--text-gray-light);
    font-size: 1rem;
    line-height: 1.8;
  }

  a {
    text-decoration: none;
  }

  ul {
    list-style: none;
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
