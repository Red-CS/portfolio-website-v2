---
import { FiGithub, FiExternalLink } from 'react-icons/fi'
import type { ProjectType } from '@schemas'
import Icon from './Icon.astro'
import { Image } from 'astro:assets'

const isNonEmpty = (str: string | undefined) => {
  if (str === undefined) return false
  return str.trim().length !== 0
}

interface Props {
  project: ProjectType
}

const { project } = Astro.props
---

<li class='project-container'>
  <div class='thumbnail-wrapper'>
    <div class='img-screen'></div>
    <Image
      src={project.image_url}
      alt={`Thumbnail image describing the ${project.title} project `}
      width={500}
      height={500}
      class='thumbnail'
    />
  </div>
  <div class='content-wrapper'>
    <p class='featured'>Featured</p>
    <h3 class='title'>
      {project.title.split(' ').map((word) => <span>{word + ' '}</span>)}
      <div class='gradient-line'></div>
    </h3>
    <p class='description'>{project.description}</p>
    <ul class='technologies'>
      {
        project.technologies.map((tech) => {
          return <li>{tech}</li>
        })
      }
    </ul>
    {/* Github link + icon */}
    {
      isNonEmpty(project.links.github) && (
        <Icon href={project.links.github || '#'} style={{ marginRight: '10px' }}>
          <FiGithub className='icon' style={{ scale: '1.2', strokeWidth: '2.25px' }} />
        </Icon>
      )
    }

    {/* Project link + icon */}
    {
      isNonEmpty(project.links.project_url) && (
        <Icon href={project.links.project_url || '#'}>
          <FiExternalLink className='icon' style={{ scale: '1.3' }} />
        </Icon>
      )
    }
  </div>
</li>
<style lang='scss'>
  @use 'src/main' as *;

  $border-radius: 10px;

  .project-container {
    width: 100%;
  }
  .thumbnail-wrapper {
    position: relative;
    .img-screen {
      position: absolute;
      content: '';
      width: 100%;
      height: 100%;
      background: var(--gradient);
      mix-blend-mode: screen;
      z-index: 1;
      opacity: 0.5;
      border-radius: $border-radius;
      filter: grayscale(50%) brightness(50%);
    }
    .thumbnail {
      width: 100%;
      height: auto;
      object-fit: cover;
      position: relative;
      object-position: center center;
      border-radius: $border-radius;
      display: block; // Gets rid of the 4px on bottom
    }
  }

  .content-wrapper {
    padding: 20px;

    .featured {
      font-family: var(--font-mono);
      color: var(--text-gray-light);
      background: var(--gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-size: 0.8rem;
      display: inline;
    }

    .title {
      font-size: 1.1rem;
      margin-bottom: 1rem;
      font-weight: 500;
      color: var(--text-main);
      display: inline-block;
      position: relative;
      display: flex;
      flex-wrap: wrap;
      white-space: pre;
    }

    .gradient-line {
      flex-grow: 1;
      align-self: flex-end;
      height: 4px;
      width: max-content;
      background: var(--gradient);
      margin-bottom: 4px;
    }

    .description {
      font-size: 0.9rem;
      margin-bottom: 7px;
      line-height: 1.8;
    }

    .technologies {
      display: flex;
      color: var(--text-gray-dark);
      column-gap: 1rem;
      font-size: 0.9rem;
      margin-bottom: 14px;
    }
  }

  @media (min-width: $breakpoint-main) {
    .project-container {
      display: grid;
      grid-template-columns: repeat(9, 1fr);
      margin: 10rem 0;

      &:nth-of-type(2n) {
        .thumbnail-wrapper {
          grid-column: 2 / 5;
        }

        .content-wrapper {
          grid-column: 5 / 8;
        }
      }

      &:nth-of-type(2n - 1) {
        .thumbnail-wrapper {
          grid-column: 6 / 9;
        }

        .content-wrapper {
          grid-row: 1;
          grid-column: 3 / 6;
          text-align: right;

          .technologies {
            justify-content: right;
          }
        }
      }
    }

    .content-wrapper {
      align-self: center;
    }
  }
</style>
