---
import { FiGithub, FiExternalLink } from 'react-icons/fi'
import type { ProjectType } from '@schemas'
import Icon from './Icon.astro'
import { Image } from 'astro:assets'

const isNonEmpty = (str: string | undefined) => {
  if (str === undefined) return false
  return str.trim().length !== 0
}

interface Props {
  project: ProjectType
}

const { project } = Astro.props
---

<li class='container'>
  <div class='thumbnail-wrapper'>
    <Image
      src={project.image_url}
      alt={`Thumbnail image describing the ${project.title} project `}
      width={500}
      height={500}
      class='thumbnail'
    />
  </div>
  <div class='content-wrapper'>
    <p class='featured'>Featured</p>
    <h3 class='title'>{project.title}</h3>
    <p class='description'>{project.description}</p>
    <ul class='technologies'>
      {
        project.technologies.map((tech) => {
          return <li>{tech}</li>
        })
      }
    </ul>
    {/* Github link + icon */}
    {
      isNonEmpty(project.links.github) && (
        <Icon href={project.links.github || '#'} style={{ marginRight: '10px' }}>
          <FiGithub className='icon' style={{ scale: '1.2' }} />
        </Icon>
      )
    }

    {/* Project link + icon */}
    {
      isNonEmpty(project.links.project_url) && (
        <Icon href={project.links.project_url || '#'}>
          <FiExternalLink className='icon' style={{ scale: '1.3' }} />
        </Icon>
      )
    }
  </div>
</li>
<style lang='scss'>
  @use 'src/main' as *;
  .container {
    width: 100%;
    background-color: #191919;
    border-radius: 10px;
    border: 3px solid #4a4a4a;
    height: fit-content;
  }

  .thumbnail {
    max-width: 100%;
    height: auto !important;
    object-fit: cover;
    border-radius: 10px 10px 0 0;
    border-bottom: solid 3px transparent;
    background-image: linear-gradient(var(--bg-color), var(--bg-color)), var(--gradient);
    border-image-slice: 1;
    background-origin: border-box;
    background-clip: padding-box, border-box;
  }

  .content-wrapper {
    padding: 0.9em;
  }
  .featured {
    font-family: var(--font-mono);
    font-size: 0.8rem;
  }

  .title {
    font-size: 1.4rem;
    margin-bottom: 10px;
    position: relative;
    display: flex;
    min-width: 0;
    &::after {
      content: '';
      background-image: var(--gradient);
      height: 6px;
      margin-left: 10px;
      margin-bottom: 5px;
      flex: 1;
      align-self: flex-end;
    }
  }

  .description {
    font-size: 1rem;
    line-height: 1.4;
    color: var(--text-gray-light);
    margin-bottom: 15px;
  }

  .technologies {
    color: var(--text-gray-dark);
    font-family: var(--font-mono);
    font-size: 0.8rem;
    display: flex;
    flex-wrap: wrap;
    column-gap: 20px;
    margin-bottom: 20px;
    & li {
      padding: 0.5rem 0;
    }
  }

  .icon-component {
    margin-right: 10px;
  }

  @media (min-width: $breakpoint-main) {
    .container {
      display: grid;
      grid-template-columns: 5% 20% 10% 48% 17%;
      grid-template-rows: repeat(6, 94px);
    }

    .thumbnail-wrapper {
      border: 4px solid blue;
      display: grid;
      grid-template-columns: subgrid;
      grid-template-rows: subgrid;
      grid-column: 2 / 5;
      grid-row: 2 / 6;
    }

    .thumbnail {
      max-width: unset;
      display: block;
    }

    .content-wrapper {
      display: none;
      border: 4px solid blue;
      grid-column: 2 / 6;
      grid-row: 2 / 4;
    }

    .title {
      grid-column: 1 / 3;
      grid-row: 1 / 2;
    }

    .description {
      grid-column: 3 / 10;
      grid-row: 5 / 6;
    }
  }
</style>
